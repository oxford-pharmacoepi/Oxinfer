[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Oxinfer onboarding",
    "section": "",
    "text": "We’ve written this book for anyone interested in a working with databases mapped to the OMOP Common Data Model (CDM) in a tidyverse inspired approach. That is, human centered, consistent, composable, and inclusive (see https://design.tidyverse.org/unifying.html for more details on these principles).\nNew to the OMOP CDM? We’d recommend you pare this book with The Book of OHDSI\nNew to R? We recommend you compliment the book with R for data science\n\n\n\nTO ADD\n\n\n\n This work is licensed under a Creative Commons Attribution-NonCommercial-ShareAlike 4.0 International License."
  },
  {
    "objectID": "connect_to_database.html",
    "href": "connect_to_database.html",
    "title": "1  Connect to the database",
    "section": "",
    "text": "To connect to databases we will use DBI package and CDMConnector, you can find more information about both packages in their websites:\n\nDBI package website: https://dbi.r-dbi.org/\nCDMConnector package website: https://darwin-eu.github.io/CDMConnector/\n\nConnect to database (standard way) and set up the environment\nTo connect to the database, you need to know some parameters of it: server_dbi, port, host, server, user, and password.\nserver_dbi is different for each one of the databases: e.g. \nserver_dbi <- “cdm_aurum_202106”\nPort is the port used to connect to the database for the moment our databases use port 5432.\nport <- “5432”\nHost is the IP of the computer that contains the databases. For the moment the host of all our current databases is: 163.1.64.2\nhost <- “163.1.64.2”\nServer is the combination of the host and the server_dbi with a slash “/” in between.\nserver <- “163.1.64.2/cdm_aurum_202106”\nUser and password are provided by the database administrator (e.g. Antonella), and they are personal and nontransferable. One of the first things that we will have to do is to change the password, from the default one (given by the administrator) to one of our choices (see STEP 2). The username and password are shared by all the databases that we have on the same port and server, so we need to change it only once.\nuser <- “…”\npassword <- “…”\nSTEP 0 Install the libraries\nThe libraries necessary to connect to a database are: DBI, RPostgres, dplyr, dbplyr, usethis, DatabaseConnector and here. They are all CRAN libraries so there should not be any problem installing them: if you have any problem please ask for help. To install them run the following commands:\ninstall.packages(c(“DBI”,“RPostgres”,“dplyr”,“dbplyr”,“usethis”,\n               \"DatabaseConnector\",\"here\")) \nSTEP 1 Connect to a database for first time\nExecute the following commands, make sure that you fill the parameters of the database accordingly (lines 7-11)."
  },
  {
    "objectID": "connect_to_database.html#load-libraries",
    "href": "connect_to_database.html#load-libraries",
    "title": "1  Connect to the database",
    "section": "1.2 Load libraries",
    "text": "1.2 Load libraries\nlibrary(“DBI”)\nlibrary(“RPostgres”)"
  },
  {
    "objectID": "connect_to_database.html#set-connection-details",
    "href": "connect_to_database.html#set-connection-details",
    "title": "1  Connect to the database",
    "section": "1.3 Set connection details",
    "text": "1.3 Set connection details"
  },
  {
    "objectID": "connect_to_database.html#substitute-the-next-5-lines-with-the-specifications-of-the-database-that-you",
    "href": "connect_to_database.html#substitute-the-next-5-lines-with-the-specifications-of-the-database-that-you",
    "title": "1  Connect to the database",
    "section": "1.4 Substitute the next 5 lines with the specifications of the database that you",
    "text": "1.4 Substitute the next 5 lines with the specifications of the database that you"
  },
  {
    "objectID": "connect_to_database.html#want-to-connect",
    "href": "connect_to_database.html#want-to-connect",
    "title": "1  Connect to the database",
    "section": "1.5 want to connect",
    "text": "1.5 want to connect\nserver_dbi <- “…”\nuser <- “…”\npassword <- “…”\nport <- “…”\nhost <- “…”"
  },
  {
    "objectID": "connect_to_database.html#connect-to-the-database",
    "href": "connect_to_database.html#connect-to-the-database",
    "title": "1  Connect to the database",
    "section": "1.6 Connect to the database",
    "text": "1.6 Connect to the database\ndb <- dbConnect(RPostgres::Postgres(),\n                    dbname = server_dbi, \n\nport = port, \n\n   host = host, \nuser = user,\n    password = password) \nTo check that you are connected run the following commands:\nlibrary(“dplyr”)\ntbl(db, sql(“SELECT * FROM public.person limit 1”))\nIf you are connected you should see something like this in your terminal:\nShapeBackground pattern\nDescription automatically generated\nSTEP 2 Change the password (only to be executed the first time a user connects)\nFor the new password make sure that you chose a strong password.\nAfter connecting to the database with the temporary password, to change the password, you must execute the following command in the terminal:\ndbGetQuery(db, “ALTER USER user WITH PASSWORD ‘new_password’”)\nExample:\ndbGetQuery(db, “ALTER USER martics WITH PASSWORD ‘12345678’”)\nDisconnect from the database and reconnect with the new password to make sure that the password change was effective.\ndbDisconnect(db)\npassword <- “new_password”\ndb <- dbConnect(RPostgres::Postgres(),\n                    dbname = server_dbi, \n\n port = port, \nhost = host,\n    user = user,\n\n    password = password) \ntbl(db, sql(“SELECT * FROM public.person limit 1”))\nIf everything worked, you must observe the same output that you observed before.\nSTEP 3 Set .Renviron\nIncluding username, password and connection details in an R script is something that we must avoid at all costs. Otherwise, when we share our code or upload it in GitHub our account can be vulnerable. So NEVER include the connection details into an R script!\nTo avoid this potential problem we are going to store the connection details of our database in .Renviron file so that we can use them easily without sharing them.\nHow .Renviron works? This is a file where we write a list of variables with their values that we can access from any R script. For example, if I add to the file:\nNAME = “marti”\nWhen I execute the following command, I will obtain “marti” as a result:\nSys.getenv(“NAME”)\nSo this two commands would have the same output, but in the second case without having the same .Renviron file someone external won’t be able to read it.\nx <- “marti”\nx <- Sys.getenv(“NAME”)\nTo open and set the .Renviron file we have two options:\nOPTION 1: open directly the file:\nGraphical user interface, application\nDescription automatically generated\nOPTION 2: write the following command in the console:\nusethis::edit_r_environ()\nOnce you have it opened you must add the follow to the file:\nDB_USER = “xxx” # Username for the database\nDB_PASSWORD = “xxx” # Password for the database, the new one!!\nDB_PORT = “5432”\nDB_HOST = “163.1.64.2”\nDB_SERVER_name_database = “163.1.64.2/xxx” # xxx depends on the database that you\nDB_SERVER_DBI_name_database = “xxx” # want to access, see section 4.\nInstead of DB_SERVER_DBI_name_database we can write a name that we can remember easily. For example, for CPRD AURUM May 2021 release I would write in .Renviron file:\nDB_SERVER_DBI_aurum202106 = “cdm_aurum_202106”\nAnd call it from the main script as:\nserver_dbi <- Sys.getenv(“DB_SERVER_DBI_aurum202106”)\nBut as said we can use any name that we want to use.\nImportant!! Every time that we change .Renviron file, R must be rebooted (Session / Restart R, or Ctrl+Shift+F10) so that the changes are effective.\nSTEP 4 Check that .Renviron setting works\nAfter rebooting, execute the following code to check if you can connect to the data base:\nlibrary(“DBI”)\nlibrary(“RPostgres”)"
  },
  {
    "objectID": "connect_to_database.html#use-your-own-.renviron-keys-to-select-the-database-that-you-want-to-access",
    "href": "connect_to_database.html#use-your-own-.renviron-keys-to-select-the-database-that-you-want-to-access",
    "title": "1  Connect to the database",
    "section": "1.7 use your own .Renviron “keys” to select the database that you want to access",
    "text": "1.7 use your own .Renviron “keys” to select the database that you want to access\nserver_dbi <- Sys.getenv(“DB_SERVER_DBI_name_database”)\nuser <- Sys.getenv(“DB_USER”)\npassword <- Sys.getenv(“DB_PASSWORD”)\nport <- Sys.getenv(“DB_PORT”)\nhost <- Sys.getenv(“DB_HOST”)\ndb <- dbConnect(RPostgres::Postgres(),\n                    dbname = server_dbi, \n\n    port = port, \n\n    host = host,\n\n     user = user,\n\n    password = password) \ntbl(db, sql(“SELECT * FROM public.person limit 1”))\nIf you connected correctly to the database, you must observe the same output that you observed before.\nConnect to the database (OHDSI way)\nThe connector used in OHDSI packages is different from the one used in the “standard way”. To create the connection used in OHDSI packages for your database you must use the following commands:\nlibrary(“DatabaseConnector”)\nlibrary(“here”)\nserver <- Sys.getenv(“DB_SERVER_name_database”)\nuser <- Sys.getenv(“DB_USER”)\npassword <- Sys.getenv(“DB_PASSWORD”)\nport<- Sys.getenv(“DB_PORT”)\nhost <- Sys.getenv(“DB_HOST”)\nconnectionDetails <- DatabaseConnector::downloadJdbcDrivers(“postgresql”,\n                                                        here::here()) \nconnectionDetails <- DatabaseConnector::createConnectionDetails(\n                            dbms = \"postgresql\", \nserver = server,\nuser = user,\npassword = password,\nport = port,\npathToDriver = here::here())\nImportant considerations\nThe SQL dialect of our database is: postgresql. This will be needed in some functions (manly OHDSI packages) as an input.\ntargetDialect <- “postgresql”\nIMPORTANT!!\nThe database works with schemas each schema contains different tables and data. The two schemas that we have access to are:\nPublic: contains the mapped data and the vocabularies. This schema should NEVER be used to write.\nThis should be automatically achieved if people have the correct privileges and do not use WebAPI privileges.\nResults: should be the only schema where the users have read and write privileges. It contains the cohorts that we create as well as the tables that we upload.\ncdm_database_schema <- “public” vocabulary_database_schema <- “public” results_database_schema<- “results”\nAvailable databases\nFor the moment we have access to 4 databases:\ncdm_aurum_202106 - CPRD AURUM 2021_06 release\np20_059_cdm_aurum - CPRD AURUM for protocol 20_059.\np20_000211_cdm_aurum - CPRD AURUM for protocol 20_000211.\ncdmgold202007 - CPRD GOLD 2020_07 release.\nA suggestion of data to add to the .Renviron file would be:\nDB_SERVER_aurum_202106 = “163.1.64.2/cdm_aurum_202106”\nDB_SERVER_DBI_aurum_202106 = “cdm_aurum_202106”\nDB_SERVER_aurum_protocol_059 = “163.1.64.2/p20_059_cdm_aurum”\nDB_SERVER_DBI_ aurum_protocol_059 = “p20_059_cdm_aurum”\nDB_SERVER_aurum_protocol_211 = “163.1.64.2/p20_000211_cdm_aurum”\nDB_SERVER_DBI_aurum_protocol_211 = “p20_000211_cdm_aurum”\nDB_SERVER_gold_202007 = “163.1.64.2/cdmgold202007”\nDB_SERVER_DBI_gold_202007 = “cdmgold202007”"
  }
]