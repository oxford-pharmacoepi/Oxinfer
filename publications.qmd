# Publications

## Books

-   <span class="author_publication">Burn E</span>, Black A, Raventós B, <span class="author_publication">Guo Y</span>, <span class="author_publication">Du M</span>, <span class="author_publication">López-Güell K</span>, <span class="author_publication">Mercadé-Besora N</span>, <span class="author_publication">Català M</span> (2024). *Tidy-R-programming-with-OMOP* <https://github.com/oxford-pharmacoepi/Tidy-R-programming-with-OMOP>

## Articles

```{r, results='hide', message=FALSE, echo=FALSE}
authors <- c(
  "burn, edward", "catala, marti", "newby, danielle", "du, mike", "guo, yuchen",
  "burkard, theresa", "chen, xihang", "lopez guell, kim", 
  "spivakovsky gonzalez, pablo", "alcalde herraiz, marta",
  "mercade besora, nuria"
)
x <- pubmedR::pmApiRequest(
  paste0(authors, "[Author]", collapse = " OR "), limit = Inf) |>
  suppressMessages()

getIds <- function(xx) {
  res <- list(pubmed = NA_character_, doi = NA_character_)
  dat <- xx$PubmedData$ArticleIdList
  for (i in seq_along(dat)) {
    nm <- dat[[i]]$.attrs |> unname()
    val <- dat[[i]]$text
    if (nm %in% c("pubmed", "doi")) {
      if (nm == "doi") val <- paste0("https://doi.org/", val)
      res[[nm]] <- val
    }
  }
  return(res)
}
getDate <- function(xx) {
   dat <- xx$MedlineCitation$Article$ArticleDate
   x <- as.Date(paste0(dat$Year, "-", dat$Month, "-", dat$Day), format = "%Y-%m-%d")
   if (is.na(x)) {
     dat <- xx$PubmedData$History$PubMedPubDate
     x <- as.Date(paste0(dat$Year, "-", dat$Month, "-", dat$Day), format = "%Y-%m-%d")
   }
   return(x)
}
cleanName <- function(y) {
  y |>
    stringr::str_to_lower() |>
    stringr::str_split(pattern = ",| |-") |>
    lapply(dplyr::first) |>
    unlist()  |>
    stringr::str_replace(pattern = "à", replacement = "a") |>
    stringr::str_replace(pattern = "á", replacement = "a") |>
    stringr::str_replace(pattern = "è", replacement = "e") |>
    stringr::str_replace(pattern = "é", replacement = "e") |>
    stringr::str_replace(pattern = "í", replacement = "i")
}
ours <- authors |>
  stringr::str_split(pattern = ",| ") |>
  lapply(dplyr::first) |>
  unlist()
getAuthor <- function(xx, ours) {
  ids <- rep(0, length(ours))
  auts <- xx$MedlineCitation$Article$AuthorList
  aut <- character()
  for (i in seq_along(auts)) {
    au <- auts[[i]]
    if ("LastName" %in% names(au)) {
      a <- paste(au$LastName, au$Initials)
      cn <- cleanName(au$LastName)
      if (cn %in% ours) {
        ids[ours %in% cn] <- 1
        a <- paste0('<span class="author_publication">', a, '</span>')
      }
      aut[i] <- a
    }
  }
  aut <- paste0(aut, collapse = ", ")
  return(list(aut = aut, ids = ids))
}
data <- NULL
for (k in seq_along(x$data)) {
  xx <- x$data[[k]]
  ids <- getIds(xx)
  aut <- getAuthor(xx, ours)
  nms <- aut$ids |>
    as.list() |>
    rlang::set_names(ours)
  data <- data |>
    dplyr::union_all(dplyr::tibble(
      id = k, 
      article = xx$MedlineCitation$Article$ArticleTitle |> 
        stringr::str_flatten(),
      date = getDate(xx), 
      pubmed = as.numeric(ids$pubmed), 
      doi = ids$doi, 
      journal = xx$MedlineCitation$Article$Journal$Title,
      authors = aut$aut,
      !!!nms
    ))
}
data <- data |>
  dplyr::mutate(
    year = clock::get_year(date),
    cite = paste0(
      "- ", authors, ". ", article, " (**", year, "**), *", journal, "*. <", doi,
      ">"
    )
  ) |>
  dplyr::arrange(dplyr::desc(date))

text <- paste0(data$cite, collapse = "\n")
```

```{r, results='asis', echo=FALSE}
cat(text)
```

