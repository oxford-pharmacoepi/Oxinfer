# Connect to the database

## Getting started

To connect to databases we will use DBI package and CDMConnector, you can find more information about both packages in their websites:

-   DBI package website: <https://dbi.r-dbi.org/>

-   CDMConnector package website: <https://darwin-eu.github.io/CDMConnector/>

Connect to database (standard way) and set up the environment

## Load libraries

The following libraries will be used in this chapter: DBI, RPostgres, dplyr, dbplyr, usethis and here. If you do not have them installed you can install them with the following command:

```{r}
library(DBI)
library(RPostgres)
library(dplyr)
library(dbplyr)
library(usethis)
library(here)
```

## Credentials and database details

To create a connection to a database we need some parameters:

- `host`: it is the IP of the computer that contains the database in our case it will be always the same and you can check it [here](https://unioxfordnexus.sharepoint.com/:w:/r/sites/NDORMS-PDE/Shared%20Documents/OxInfer/Onboarding/Databases.docx?d=wb4b16650858b4206a3486f9bddd3e78b&csf=1&web=1&e=jNsYjc)

- `port`: port to connect, in our case it will be always the same and you can check it [here](https://unioxfordnexus.sharepoint.com/:w:/r/sites/NDORMS-PDE/Shared%20Documents/OxInfer/Onboarding/Databases.docx?d=wb4b16650858b4206a3486f9bddd3e78b&csf=1&web=1&e=jNsYjc)

- `dbname`: name of the database we want to connect, each database has a different name, link to the names of the databases hosted by our server: [link](https://unioxfordnexus.sharepoint.com/:w:/r/sites/NDORMS-PDE/Shared%20Documents/OxInfer/Onboarding/Databases.docx?d=wb4b16650858b4206a3486f9bddd3e78b&csf=1&web=1&e=jNsYjc)

- `user`: each individual has a user to connect to the database this is unique and nontransferable.

- `password`: associated to each user.

To get a user and password or if you are not sure of what are the parameters of a certain database you can ask [Hez](mailto:hezekiah.omulo@ndorms.ox.ac.uk).

## Create a connection

```{r, echo = FALSE, message=FALSE}
if (Sys.getenv("EUNOMIA_DATA_FOLDER") == "") {
  Sys.setenv("EUNOMIA_DATA_FOLDER" = here::here())
  CDMConnector::downloadEunomiaData()
}
con <- dbConnect(duckdb::duckdb(), CDMConnector::eunomia_dir())
tbl(con, sql("SELECT * FROM main.person limit 1"))
```

We can have multiple connections open at the same time, but it is recommended to not open more than one connection simultaniously, and close connections when we finish using them.

```{r}
dbDisconnect(conn = con)
```

## Change password

The database administrator will give us a password it is **extremely important** that you change it after you connect to the database for first time. To change your password you must:

1. open a connection to the database:
```{r, eval = FALSE}
con <- dbConnect(drv = Postgres(),
                 dbname = "...",
                 host = "...",
                 port = "...",
                 user = "...",
                 password = "...")
```         

2. Change the password, to do so we have to run the following command:
```{r, eval = FALSE}
dbGetQuery(con, "ALTER USER xxxxx WITH PASSWORD 'xxxxxxxxxxx'")
```
Example:
```{r, eval = FALSE}
dbGetQuery(con, "ALTER USER martics WITH PASSWORD '12345678'")
```

Make sure that you chose an strong password, see the [University guide](https://www.infosec.ox.ac.uk/create-strong-passwords) for more information about strong and safe passwords.

3. Disconnect from the database:
```{r, eval = FALSE}
dbDisconnect(con)
```

4. Connect again with the new password to check that the change was done correctly:
```{r, eval = FALSE}
con <- dbConnect(drv = Postgres(),
                 dbname = "...",
                 host = "...",
                 port = "...",
                 user = "...",
                 password = "new_password")
```  

5. Disconnect from the database again:
```{r, eval = FALSE}
dbDisconnect(con)
```

## Set your .Renviron

### What are secrets?

Connection to the database it is a repetitive process that you will repeat every day, but at the same time you need to keep all your database credentials safely guarded. The R environ file will help use to do so.

.Renviron is a file linked to your R session to safely save secrets. It is loaded at the beginning of each session and secrets are kept till the session is terminated or restarted.

To access to a secret you can type:
```{r}
Sys.getenv()
```

There are two type of secrets:

- *temporal* (as we have just seen), these secrets only last for while the session is ongoing the moment that you restart or terminate it all the secrets will be gone, so it is not recommended to use temporal secrets.

- *permanent* (we will see in the next step), these secrets are kept across different sessions and will always be in your environment unless you explicitly delete them. These secrets are stored in the .Renviron file. We will use permanent secrets to store our database credentials.

You can read more about secrets [here](https://cran.r-project.org/web/packages/httr/vignettes/secrets.html).

### Set up your own .Renviron file

To open your .Renviron file you can run the following command:
```{r, eval = FALSE}
edit_r_environ()
```


**YOU MUST NEVER INCLUDE CONNECTION DETAILS IN A SCRIPT THAT IS PUBLIC OR YOU SHARE WITH SOMEONE, EVEN IF YOU TRUST THAT PERSON OR IS IN THE SAME ORGANIZATION.**
