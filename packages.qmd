# Packages

## Our packages

Oxinfer developed several packages to work with the OMOP Common Data Model:

```{r, results='asis', echo=FALSE}
packages <- dplyr::tribble(
  ~package_name, ~organisation,
  "omopgenerics", "darwin-eu-dev",
  "PatientProfiles", "darwin-eu-dev",
  "CohortConstructor", "ohdsi",
  "CodelistGenerator", "darwin-eu",
  "visOmopResults", "darwin-eu",
  "IncidencePrevalence", "darwin-eu",
  "DrugUtilisation", "darwin-eu-dev",
  "CohortCharacteristics", "darwin-eu-dev",
  "CohortSurvival", "darwin-eu",
  "CohortSymmetry", "oxford-pharmacoepi",
  "OmopSketch", "oxford-pharmacoepi",
  "PhenotypeR", "oxford-pharmacoepi",
  "omock", "ohdsi",
)
hexsticker <- function(pkg, org) {
  web <- "https://github.com/{org}/{pkg}/blob/main/man/figures/logo.png?raw=true" |>
    glue::glue()
  if (RCurl::url.exists(web)) {
    web <- '<img src="{web}" alt="{pkg}" style="width:150px;">' |>
      glue::glue()
  } else {
    web <- pkg
  }
  '<a class = "hexsticker" href="https://{org}.github.io/{pkg}/">{web}</a>' |>
    glue::glue()
  web
}
repo <- function(pkg, org) {
  "https://github.com/{org}/{pkg}/" |>
    glue::glue()
}
open_issue <- function(pkg, org) {
  '<a class="report_issue" href="{repo(pkg, org)}issues/new/choose"><i class="bi bi-github" role="img"></i>   Report an issue</a>' |>
    glue::glue()
}
website <- function(pkg, org) {
  web <- "https://{org}.github.io/{pkg}/" |>
    glue::glue()
  '<a class="documentation_website" href="{web}"><i class="bi bi-book" role="img"></i>   Documentation website</a>' |>
    glue::glue()
}
readme <- function(repo) {
  repo |>
    stringr::str_replace(pattern = "github", replacement = "raw.githubusercontent") |>
    paste0("main/README.Rmd") |>
    readLines()
}
get_lifecycle <- function(repo) {
  x <- readme(repo)
  x <- x[grepl("[![Lifecycle:", x, fixed = TRUE)]
  if (length(x) != 1) x <- "no lifecycle"
  return(x)
}
packages <- packages |>
  dplyr::rowwise() |>
  dplyr::mutate(
    hexsticker = hexsticker(package_name, organisation),
    repo_link = repo(package_name, organisation),
    issue = open_issue(package_name, organisation),
    website = website(package_name, organisation),
    lifecycle = get_lifecycle(repo_link),
    text = paste0(
      "### ", package_name, "\n", lifecycle, "\n", hexsticker, '\n', website, "\n", issue, "\n"
    )
  )
```

```{r, echo = FALSE, results='asis'}
cat(paste0(packages$text, collapse = "\n"))
# DT::datatable(
#   x, escape = F, rownames = F, 
#   options = list(scrollX = TRUE, dom = 't', pageLength = 100))
```

-   cran + version + Last cran release date
